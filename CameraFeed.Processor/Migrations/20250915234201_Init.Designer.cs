// <auto-generated />
using System;
using CameraFeed.Processor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CameraFeed.Processor.Migrations
{
    [DbContext(typeof(CamDbContext))]
    [Migration("20250915234201_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CameraFeed.Processor.Data.ResolutionRecord", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Width", "Height")
                        .IsUnique();

                    b.ToTable("resolution", (string)null);
                });

            modelBuilder.Entity("CameraFeed.Processor.Data.WorkerRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CameraId")
                        .HasColumnType("int");

                    b.Property<int>("DownscaleRatio")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("Framerate")
                        .HasColumnType("int");

                    b.Property<double>("MotionRatio")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResolutionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("UseMotiondetection")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CameraId")
                        .IsUnique();

                    b.HasIndex("ResolutionId");

                    b.ToTable("worker", (string)null);
                });

            modelBuilder.Entity("CameraFeed.Processor.Data.WorkerRecord", b =>
                {
                    b.HasOne("CameraFeed.Processor.Data.ResolutionRecord", "Resolution")
                        .WithMany()
                        .HasForeignKey("ResolutionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Resolution");
                });
#pragma warning restore 612, 618
        }
    }
}
